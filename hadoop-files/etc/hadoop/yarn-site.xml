<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->
<configuration>

  <!-- Site specific YARN configuration properties -->
  <property>
    <name>yarn.nodemanager.aux-services</name>
    <value>mapreduce_shuffle</value>
  </property>
  <!-- 指定Resource Manager -->
  <property>
    <name>yarn.resourcemanager.hostname</name>
    <value>node1</value>
  </property>
  <!-- 指定env白名单，方便跨节点调用 -->
  <property>
    <name>yarn.nodemanager.env-whitelist</name>
    <value>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME</value>
  </property>
  <!-- log记录设置 -->
  <property>
    <name>yarn.log-aggregation-enable</name>
    <value>true</value>
  </property>
  <!-- 指定log记录目录及端口 -->
  <property>
    <name>yarn.log.server.url</name>
    <value>http://master:19888/jobhistory/logs</value>
  </property>
  <!-- 指定历史log记录存续时间 -->
  <property>
    <name>yarn.log-aggregation.retain-seconds</name>
    <value>604800</value>
  </property>
  <!-- 若调度器选择容量调度器 -->
  <!-- <property>
    <description>The class to use as the resource scheduler.</description>
    <name>yarn.resourcemanager.scheduler.class</name>
    <value>org.apach.hadoop.yarn.resourcemanager.scheduler.capacity.CapacityScheduler</value>
  </property> -->


  <!-- 若调度器选择公平调度器 -->
  <property>
    <name>yarn.resourcemanager.scheduler.class</name>
    <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler</value>
    <description>配置使用公平调度器</description>
  </property>

  <property>
    <!-- 指定公平调度器依据的配置文件 -->
    <name>yarn.scheduler.fair.allocation.file</name>
    <value>/data/hadoophome/etc/hadoop/fair-scheduler.xml</value>
  </property>
  <!-- 抢占式调度开关 -->
  <property>
    <name>yarn.scheduler.fair.preemption</name>
    <value>false</value>
  </property>




  <property>
    <description>Number of threads to handle scheduler interface.</description>
    <name>yarn.resourcemanager.scheduler.client.thread-count</name>
    <value>20</value>
  </property>


  <property>
    <description>Enable auto-detection of node capabilities such as memory and CPU</description>
    <name>yarn.nodemanager.resource.detect-hardware-capabilities</name>
    <value>false</value>
  </property>


  <property>
    <description>Flag to determine if logical processors should be counted as cores.</description>
    <name>yarn.nodemanager.resource.count-logical-processors-as-cores</name>
    <value>false</value>
  </property>

  <property>
    <description>Multiplier to determine how to convert physical cores to vcores.</description>
    <name>yarn.nodemanager.resource.pcores-vcores-multiplier</name>
    <value>2</value>
  </property>

  <property>
    <description>Amount of physical memory, in MB,taht can be allocated for containers</description>
    <name>yarn.nodemanager.resource.memory-mb</name>
    <value>16000</value>
  </property>

  <property>
    <description>Number of vcores that can be allocated</description>
    <name>yarn.nodemanager.resource.cpu-vcores</name>
    <value>8</value>
  </property>

  <property>
    <description>The minimum allocation for container request at the RM in MBs</description>
    <name>yarn.scheduler.minimum-allocation-mb</name>
    <value>1024</value>
  </property>


  <property>
    <description>The maximum allocation for container request at the RM in MBs</description>
    <name>yarn.scheduler.maximum-allocation-mb</name>
    <value>16000</value>
  </property>


  <property>
    <description>The minimum allocation for every container request as RM in vitual cpus</description>
    <name>yarn.schduler.minimum-allocation-vcores</name>
    <value>1</value>
  </property>


  <property>
    <description>The maximum allocation for every container request as RM in vitual cpus</description>
    <name>yarn.schduler.maximum-allocation-vcores</name>
    <value>8</value>
  </property>

  <property>
    <description> Whether virtual memory limits will be enforced</description>
    <name>yarn.nodemanager.vmem-check-enabled</name>
    <value>false</value>
  </property>

  <property>
    <description>Ratio between virtual memory to physical memory</description>
    <name>yarn.nodemanager.vmem-pmem-ration</name>
    <value>2.1</value>
  </property>



</configuration>
